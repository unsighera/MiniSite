@using MiniSite.Data
@inject UsersClass UsersClass

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" type="text/css" href="/style.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LogIn</title>
</head>
<body>
    <div class="RegBox">
        <h3>Log In</h3>
        <div class="Inputs">
            <div class="LoginBox">
                <label>Login</label>
                <input class="inputfield" type="text" @bind="@enteredLogin">
            </div>
            <div class="PasswordBox">
                <label>Password</label>
                <input class="inputfield" type="text" @bind="@enteredPassword">
            </div>
        </div>
        <div class="regbuttons">
            <button @onclick="LoginButton">Log in</button>
            <button @onclick="RegistraionButton">Sign In</button>
        </div>
    </div>
</body>
</html>

@* @if (showSuccessModal)
{
    <div class="modal" style="display:block;" )">
        <div class="modal-content">
            <span class="close" @onclick="()=>showSuccessModal = false">&times;</span>
            <p>Вы успешно вошли в систему!</p>
        </div>
    </div>
} *@

@code {
    [Inject] NavigationManager NavigationManager { get; set; }
    private bool showSuccessModal = false;
    string enteredLogin = "";
    string enteredPassword = "";

    private void LoginButton()
    {
        foreach (var user in UsersClass.userList)
        {
            if (user.Login == enteredLogin && user.Password == enteredPassword)
            {
                showSuccessModal = true;
                NavigationManager.NavigateTo("counter");
                return;
            }
        }
    }

    private void RegistraionButton()
    {
        NavigationManager.NavigateTo("signin");
    }
}